{"ast":null,"code":"var _jsxFileName = \"/Users/bensol/GIT/React/REACT-TEMPLATE/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem(\"todos\")));\n  const [newTodoText, setNewTodoText] = useState(\"\");\n  let checked = false;\n  let elements = [];\n  useEffect(() => {\n    if (!localStorage.getItem('elements')) localStorage.setItem('elements', '[]');\n    if (!localStorage.getItem('markedArr')) localStorage.setItem('markedArr', '[]');\n    const data = JSON.parse(localStorage.getItem(\"todos\"));\n    const markedArr = JSON.parse(localStorage.getItem('markedArr'));\n    elements = JSON.parse(localStorage.getItem('elements'));\n    setTodos(data);\n    debugger;\n    elements.forEach(element => {\n      if (markedArr.find(id => id === element.id)) {\n        element.checked = true;\n      }\n    });\n    setTodos(todos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  const addTodo = () => {\n    if (newTodoText.length > 0) {\n      setTodos(todos => [...todos, {\n        id: Date.now(),\n        text: newTodoText\n      }]);\n      setNewTodoText(\"\");\n    }\n  };\n  const checkedHandler = e => {\n    const set = new Set();\n    const markedArr = JSON.parse(localStorage.getItem('markedArr'));\n    elements = localStorage.getItem('elements');\n    elements.push(e.target);\n    localStorage.setItem('elements', JSON.stringify(elements));\n    //console.log(e.target.checked);\n    if (e.target.checked) {\n      elements.push(e.target);\n      markedArr.forEach(item => set.add(item));\n      set.add(e.target.getAttribute('id'));\n      localStorage.setItem('markedArr', JSON.stringify(Array.from(set)));\n    } else {\n      elements = elements.filter(item => item !== e.target);\n      const newArr = markedArr.filter(item => item !== e.target.id);\n      localStorage.setItem('markedArr', JSON.stringify(newArr));\n    }\n  };\n  const handleNewTodoTextChange = event => {\n    setNewTodoText(event.target.value);\n  };\n  const handleDeleteTodo = id => {\n    const markedArr = JSON.parse(localStorage.getItem('markedArr'));\n    const newArr = markedArr.filter(item => Number(item) !== Number(id));\n    localStorage.setItem('markedArr', JSON.stringify(newArr));\n    setTodos(todos => todos.filter(todo => todo.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodoText,\n        onChange: handleNewTodoTextChange,\n        placeholder: \"Enter new todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: todo.id,\n            onChange: checkedHandler,\n            type: \"checkbox\",\n            txt: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 20\n          }, this), todo.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 118\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"ULdUKoG/0Vhx1SeJXZsRsadYvSE=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","TodoList","todos","setTodos","JSON","parse","localStorage","getItem","newTodoText","setNewTodoText","checked","elements","setItem","data","markedArr","forEach","element","find","id","stringify","addTodo","length","Date","now","text","checkedHandler","e","set","Set","push","target","item","add","getAttribute","Array","from","filter","newArr","handleNewTodoTextChange","event","value","handleDeleteTodo","Number","todo","map"],"sources":["/Users/bensol/GIT/React/REACT-TEMPLATE/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport \"./styles/style.css\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem(\"todos\")));\n  const [newTodoText, setNewTodoText] = useState(\"\");\n  let checked = false;\n  let elements = [];\n\n  useEffect(() => {\n    if (!localStorage.getItem('elements')) localStorage.setItem('elements', '[]');\n    if (!localStorage.getItem('markedArr')) localStorage.setItem('markedArr', '[]');\n\n    const data = JSON.parse(localStorage.getItem(\"todos\"));\n    const markedArr = JSON.parse(localStorage.getItem('markedArr'));\n    elements = JSON.parse(localStorage.getItem('elements'));\n    setTodos(data);\n    \n    debugger\n    elements.forEach(element => {\n      if (markedArr.find((id) => id === element.id)) {\n        element.checked = true;\n      }\n    });\n    setTodos(todos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = () => {\n    if (newTodoText.length > 0) {\n      setTodos((todos) => [...todos, { id: Date.now(), text: newTodoText}]);\n      setNewTodoText(\"\");\n    }\n\n  };\n\n  const checkedHandler = (e) => {\n    const set = new Set();\n    const markedArr = JSON.parse(localStorage.getItem('markedArr'));\n    elements = localStorage.getItem('elements');\n    elements.push(e.target);\n    localStorage.setItem('elements', JSON.stringify(elements));\n    //console.log(e.target.checked);\n    if (e.target.checked) {\n      elements.push(e.target);\n      markedArr.forEach((item) => set.add(item));\n      set.add(e.target.getAttribute('id'));\n      localStorage.setItem('markedArr', JSON.stringify(Array.from(set)));\n    }else{\n      elements = elements.filter((item) => item !== e.target)\n      const newArr = markedArr.filter((item) => item !== e.target.id)\n      localStorage.setItem('markedArr', JSON.stringify(newArr));\n    }\n  }\n\n  const handleNewTodoTextChange = (event) => {\n    setNewTodoText(event.target.value);\n  };\n\n  const handleDeleteTodo = (id) => {\n    const markedArr = JSON.parse(localStorage.getItem('markedArr'));\n    const newArr = markedArr.filter((item) => Number(item) !== Number(id));\n    localStorage.setItem('markedArr', JSON.stringify(newArr));\n    setTodos((todos) => todos.filter((todo) => todo.id !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <div className=\"add-todo\">\n        <input\n          type=\"text\"\n          value={newTodoText}\n          onChange={handleNewTodoTextChange}\n          placeholder=\"Enter new todo\"\n        />\n        <button onClick={addTodo}>Add Todo</button>\n      </div>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            <label><input id={todo.id} onChange={checkedHandler} type='checkbox' txt={todo.text}/>{todo.text}</label><button onClick={() => handleDeleteTodo(todo.id)} >Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}