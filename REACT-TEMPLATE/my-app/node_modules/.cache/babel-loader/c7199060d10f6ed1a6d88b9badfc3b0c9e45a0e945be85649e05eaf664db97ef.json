{"ast":null,"code":"var _jsxFileName = \"/Users/bensol/GIT/React/REACT-TEMPLATE/my-app/src/IncrementAndDecrement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './IncrementAndDecrement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IncrementAndDecrement = props => {\n  _s();\n  const [counter, setCounter] = useState(0);\n  const decrementHandler = () => {\n    if (counter > -10) {\n      setCounter(prev => prev - 1);\n      checkValue();\n    }\n  };\n  const incrementHandler = () => {\n    if (counter < 10) {\n      setCounter(prev => prev + 1);\n      checkValue();\n    }\n  };\n  const checkValue = () => {\n    if (counter > 0) {\n      return true;\n    } else if (counter < 0) {\n      return true;\n    } else {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrementHandler,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: checkValue ? props.positive : checkValue ? props.negative : props.zero,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementHandler,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(IncrementAndDecrement, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n_c = IncrementAndDecrement;\nexport default IncrementAndDecrement;\nvar _c;\n$RefreshReg$(_c, \"IncrementAndDecrement\");","map":{"version":3,"names":["React","useState","IncrementAndDecrement","props","counter","setCounter","decrementHandler","prev","checkValue","incrementHandler","positive","negative","zero"],"sources":["/Users/bensol/GIT/React/REACT-TEMPLATE/my-app/src/IncrementAndDecrement.js"],"sourcesContent":["import React, {useState} from 'react'\nimport './IncrementAndDecrement.css';\n\nconst IncrementAndDecrement = (props) => {\n  const [counter, setCounter] = useState(0);\n\n  const decrementHandler = () => {\n    if (counter > -10) {\n      setCounter((prev) => prev - 1);\n      checkValue();\n    }\n    \n  }\n  const incrementHandler = () => {\n    if (counter < 10) {\n      setCounter((prev) => prev + 1); \n      checkValue();\n    }\n  }\n\n  const checkValue = () => {\n    if (counter > 0) {\n      return true\n    }else if (counter < 0) {\n      return true;\n    }else{\n    \n    }\n  }\n\n  return (\n\n    <>\n      <button onClick={decrementHandler}>-</button>\n      <label className={checkValue ? props.positive : checkValue ? props.negative : props.zero}>{counter}</label>\n      <button onClick={incrementHandler}>+</button>\n    </>\n  )\n}\n\nexport default IncrementAndDecrement"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,6BAA6B;AAAC;AAAA;AAErC,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMK,gBAAgB,GAAG,MAAM;IAC7B,IAAIF,OAAO,GAAG,CAAC,EAAE,EAAE;MACjBC,UAAU,CAAEE,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC9BC,UAAU,EAAE;IACd;EAEF,CAAC;EACD,MAAMC,gBAAgB,GAAG,MAAM;IAC7B,IAAIL,OAAO,GAAG,EAAE,EAAE;MAChBC,UAAU,CAAEE,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC9BC,UAAU,EAAE;IACd;EACF,CAAC;EAED,MAAMA,UAAU,GAAG,MAAM;IACvB,IAAIJ,OAAO,GAAG,CAAC,EAAE;MACf,OAAO,IAAI;IACb,CAAC,MAAK,IAAIA,OAAO,GAAG,CAAC,EAAE;MACrB,OAAO,IAAI;IACb,CAAC,MAAI,CAEL;EACF,CAAC;EAED,oBAEE;IAAA,wBACE;MAAQ,OAAO,EAAEE,gBAAiB;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7C;MAAO,SAAS,EAAEE,UAAU,GAAGL,KAAK,CAACO,QAAQ,GAAGF,UAAU,GAAGL,KAAK,CAACQ,QAAQ,GAAGR,KAAK,CAACS,IAAK;MAAA,UAAER;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,eAC3G;MAAQ,OAAO,EAAEK,gBAAiB;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBAC5C;AAEP,CAAC;AAAA,GAnCKP,qBAAqB;AAAA,KAArBA,qBAAqB;AAqC3B,eAAeA,qBAAqB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}