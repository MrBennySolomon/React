{"ast":null,"code":"var _jsxFileName = \"/Users/bensol/GIT/React/REACT-TEMPLATE/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport CustomButton from './CustomButton';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [color, setColor] = useState('');\n  const colors = [\"blue\", \"red\", \"yellow\"];\n  const clickHandler = color => setColor(color);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n      handler: clickHandler(color),\n      color: colors[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), \")\", /*#__PURE__*/_jsxDEV(CustomButton, {\n      handler: clickHandler(color),\n      color: colors[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), \")\", /*#__PURE__*/_jsxDEV(CustomButton, {\n      handler: clickHandler(color),\n      color: colors[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), \")\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"THE COLOR IS : \", color]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"5SCJp6l3vLBveqZVPs7KjXxIMCY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["CustomButton","useState","App","color","setColor","colors","clickHandler"],"sources":["/Users/bensol/GIT/React/REACT-TEMPLATE/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport CustomButton from './CustomButton';\nimport { useState } from 'react';\n\nfunction App() {\n  const [color, setColor] = useState('');\n  const colors = [\"blue\",\"red\",\"yellow\"];\n\n  const clickHandler = color => setColor(color);\n  \n  return (\n    <>\n      {/* {colors.map((color, i) => <CustomButton key={i} handler={clickHandler(color)} func={clickHandler} arr={colors}/>)} */}\n      <CustomButton handler={clickHandler(color)} color={colors[0]}/>)\n      <CustomButton handler={clickHandler(color)} color={colors[1]}/>)\n      <CustomButton handler={clickHandler(color)} color={colors[2]}/>)\n      <h1>THE COLOR IS : {color}</h1>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,YAAY,MAAM,gBAAgB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMI,MAAM,GAAG,CAAC,MAAM,EAAC,KAAK,EAAC,QAAQ,CAAC;EAEtC,MAAMC,YAAY,GAAGH,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAAC;EAE7C,oBACE;IAAA,wBAEE,QAAC,YAAY;MAAC,OAAO,EAAEG,YAAY,CAACH,KAAK,CAAE;MAAC,KAAK,EAAEE,MAAM,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,KAC/D,uBAAC,YAAY;MAAC,OAAO,EAAEC,YAAY,CAACH,KAAK,CAAE;MAAC,KAAK,EAAEE,MAAM,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,KAC/D,uBAAC,YAAY;MAAC,OAAO,EAAEC,YAAY,CAACH,KAAK,CAAE;MAAC,KAAK,EAAEE,MAAM,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,KAC/D;MAAA,WAAI,iBAAe,EAACF,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA,gBAC9B;AAEP;AAAC,GAfQD,GAAG;AAAA,KAAHA,GAAG;AAiBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}