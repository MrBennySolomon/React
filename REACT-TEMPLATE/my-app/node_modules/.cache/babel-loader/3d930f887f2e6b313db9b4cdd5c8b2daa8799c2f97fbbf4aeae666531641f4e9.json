{"ast":null,"code":"var _jsxFileName = \"/Users/bensol/GIT/React/REACT-TEMPLATE/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport data from './data.js';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [errorMsg, setErrorMsg] = useState('');\n  const [toppings, setToppings] = useState([]);\n  const dataArr = [...data];\n  const toppingsHandler = turtle => {\n    if (!toppings.find(name => turtle.name === name)) {\n      setToppings(oldArray => [...oldArray, turtle.name]);\n    } else {\n      props.errorMsgHandler('cannot duplicate');\n    }\n  };\n  const errorHandler = text => {\n    setErrorMsg(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"./App.css\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ninja Turtles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Order Pizza with the turtles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: dataArr.map(element => /*#__PURE__*/_jsxDEV(Card, {\n        errorMsgHandler: errorHandler,\n        toppingsArr: toppings,\n        toppingsHandler: toppingsHandler,\n        turtle: element\n      }, element.img, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Our order:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      classList: \"toppings\",\n      children: toppings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      classList: \"errorMessage\",\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bW1L/xe6s3A0A1lPuuTd0jmMSJM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","data","Card","App","errorMsg","setErrorMsg","toppings","setToppings","dataArr","toppingsHandler","turtle","find","name","oldArray","props","errorMsgHandler","errorHandler","text","map","element","img"],"sources":["/Users/bensol/GIT/React/REACT-TEMPLATE/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport data from './data.js';\nimport Card from './Card'\n\nconst App = () => {\n  const [errorMsg, setErrorMsg] = useState('');\n  const [toppings, setToppings] = useState([]);\n  const dataArr = [...data];\n\n  const toppingsHandler = (turtle) => {\n    if (!toppings.find((name) => turtle.name === name)) {\n      setToppings(oldArray => [...oldArray, turtle.name]);\n    }else{\n      props.errorMsgHandler('cannot duplicate')\n    }\n  }\n\n  const errorHandler = (text) => {\n    setErrorMsg(text);\n  }\n\n  return (\n    <div className='./App.css'>\n      <h1>Ninja Turtles</h1>\n      <h2>Order Pizza with the turtles</h2>\n      <div className='flex'>\n        {dataArr.map((element) => <Card key={element.img} errorMsgHandler={errorHandler} toppingsArr={toppings} toppingsHandler={toppingsHandler} turtle={element}/>)}\n      </div>\n      <h4>Our order:</h4>\n      <div classList='toppings'>{toppings}</div>\n      <div classList='errorMessage'>{errorMsg}</div>\n    </div>\n\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,IAAI,MAAM,QAAQ;AAAA;AAEzB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMQ,OAAO,GAAG,CAAC,GAAGP,IAAI,CAAC;EAEzB,MAAMQ,eAAe,GAAIC,MAAM,IAAK;IAClC,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAEC,IAAI,IAAKF,MAAM,CAACE,IAAI,KAAKA,IAAI,CAAC,EAAE;MAClDL,WAAW,CAACM,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEH,MAAM,CAACE,IAAI,CAAC,CAAC;IACrD,CAAC,MAAI;MACHE,KAAK,CAACC,eAAe,CAAC,kBAAkB,CAAC;IAC3C;EACF,CAAC;EAED,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7BZ,WAAW,CAACY,IAAI,CAAC;EACnB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAA,UAAI;IAA4B;MAAA;MAAA;MAAA;IAAA,QAAK,eACrC;MAAK,SAAS,EAAC,MAAM;MAAA,UAClBT,OAAO,CAACU,GAAG,CAAEC,OAAO,iBAAK,QAAC,IAAI;QAAmB,eAAe,EAAEH,YAAa;QAAC,WAAW,EAAEV,QAAS;QAAC,eAAe,EAAEG,eAAgB;QAAC,MAAM,EAAEU;MAAQ,GAArHA,OAAO,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAA4G;IAAC;MAAA;MAAA;MAAA;IAAA,QACzJ,eACN;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eACnB;MAAK,SAAS,EAAC,UAAU;MAAA,UAAEd;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAO,eAC1C;MAAK,SAAS,EAAC,cAAc;MAAA,UAAEF;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1C;AAGV,CAAC;AAAA,GA9BKD,GAAG;AAAA,KAAHA,GAAG;AAgCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}