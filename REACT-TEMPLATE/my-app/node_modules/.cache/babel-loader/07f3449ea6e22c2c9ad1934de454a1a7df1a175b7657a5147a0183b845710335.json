{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = _ref => {\n  _s();\n  let {\n    msg\n  } = _ref;\n  const [todos, setTodos] = useState([]);\n  const [newTodoText, setNewTodoText] = useState(\"\");\n  const messages = JSON.parse(localStorage.getItem('messages'));\n\n  //console.log('inside <ToDoList/>', messages);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"todos\");\n    if (data) {\n      setTodos(JSON.parse(data));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  const addTodo = () => {\n    setTodos(todos => [...todos, {\n      id: Date.now(),\n      text: newTodoText\n    }]);\n    setNewTodoText(\"\");\n  };\n  const handleNewTodoTextChange = event => {\n    setNewTodoText(event.target.value);\n  };\n  const handleDeleteTodo = id => {\n    setTodos(todos => todos.filter(todo => todo.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDoItem\n  }, void 0, false);\n};\n_s(ToDoList, \"H+TogRpqLZQ2fE5DkD2DFRLodK4=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","ToDoList","msg","todos","setTodos","newTodoText","setNewTodoText","messages","JSON","parse","localStorage","getItem","data","setItem","stringify","addTodo","id","Date","now","text","handleNewTodoTextChange","event","target","value","handleDeleteTodo","filter","todo","toDoItem"],"sources":["/Users/bensol/GIT/React/REACT-TEMPLATE/my-app/src/components/ToDoList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst ToDoList = ({msg}) => {\n  \n  const [todos, setTodos] = useState([]);\n  const [newTodoText, setNewTodoText] = useState(\"\");\n\n  const messages = JSON.parse(localStorage.getItem('messages'));\n  \n  //console.log('inside <ToDoList/>', messages);\n  \n  \n  useEffect(() => {\n    const data = localStorage.getItem(\"todos\");\n    if (data) {\n      setTodos(JSON.parse(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = () => {\n    setTodos((todos) => [...todos, { id: Date.now(), text: newTodoText }]);\n    setNewTodoText(\"\");\n  };\n\n  const handleNewTodoTextChange = (event) => {\n    setNewTodoText(event.target.value);\n  };\n\n  const handleDeleteTodo = (id) => {\n    setTodos((todos) => todos.filter((todo) => todo.id !== id));\n  };\n\n\n  return (\n    <>\n      {/* {messages[0]} */}\n      {toDoItem}\n\n      {/* {messages.map((item) => {\n        return <div className='todo-item' key={item.id}></div>\n      })} */}\n    </>\n  )\n}\n\nexport default ToDoList"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAElD,MAAMC,QAAQ,GAAG,QAAW;EAAA;EAAA,IAAV;IAACC;EAAG,CAAC;EAErB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMO,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;;EAE7D;;EAGAZ,SAAS,CAAC,MAAM;IACd,MAAMa,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC1C,IAAIC,IAAI,EAAE;MACRR,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACG,IAAI,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACdW,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACM,SAAS,CAACX,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMY,OAAO,GAAG,MAAM;IACpBX,QAAQ,CAAED,KAAK,IAAK,CAAC,GAAGA,KAAK,EAAE;MAAEa,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;MAAEC,IAAI,EAAEd;IAAY,CAAC,CAAC,CAAC;IACtEC,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMc,uBAAuB,GAAIC,KAAK,IAAK;IACzCf,cAAc,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,gBAAgB,GAAIR,EAAE,IAAK;IAC/BZ,QAAQ,CAAED,KAAK,IAAKA,KAAK,CAACsB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC7D,CAAC;EAGD,oBACE;IAAA,UAEGW;EAAQ,iBAKR;AAEP,CAAC;AAAA,GA7CK1B,QAAQ;AAAA,KAARA,QAAQ;AA+Cd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}